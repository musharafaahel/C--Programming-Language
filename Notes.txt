  C    was developed by Dennis Ritchie in the year 1972 at Bell Labouratories in USA.
It was mainly develop ed for writing Operating Systems UNIX


FEATURES OF C LANGUAGE :-
1.   Simple
2. Structured
3. Memory Management
4. Fast Speed
5. Extensible
6. Machine Independent


COMPILER   Translates program to binary language.
           COMPILATION
PROGRAM--->Complied file--->Run 

PROGRAM RUN TOP TO BOTTOM LINE BY LINE
1.stdio.h---standard input/output .header file.
2.string.h----string.header file.

define ---- to define constant.


 comment section
link section
global declartion
define section
main section
sub program section


     Va riable naming rule
1.all alphabets can be used
2.underscore c an also be used
3.can't start with numbers and special characters.
4.case sensitive.
5.can't use c predefined keywords


DATA TYPES

int   values 0-9
char  a-z A-Z  +*-/ @#$%^&*(){}[];:'"<>,.?/!~`
float 2.3, 2.12345678912345678912
double 3.upto 40 or 50


%d---stands for interger
%f---stands for float




printf("",) to give output 

scanf("",) to get input from user

& (ampecend) ---address of operator


1.Each instruction in c program is written in seperate statements.
2.The statements in a program must appear in the same orderin which we wish them to be execute.
3.Blank spaces may  be inserted between two words to improve the readability of the statement, howerver no blank spaces are allowed within variables, constant or keyword.
4.All the statements are entered in small case letters.
 i.e  a-z
5.C has no specific rules for the position for which the statements to be written. That's why it is called as free-form language
6.Every C statements must end with a ; thus ; acts as a terminators.


Calculating Simple interest.

SI = p*t*r/100 ---->Formula

p--->amount
t--->time
r--->rate of interest

Board mass rule
according to precendence value operation are done
/ *
+ -



CONDITIONAL STATEMENTS
"==" -----comparision operator
true-1
false-0

"!="----not is operator

x==y
x!=y
x>y
x<y
x>=y
x<=y


CONDITIONAL STATEMENT PART 2

if block
nested if else
forms of if
or and not -pass/fail problem
insurance problem
CONDITIONAL OPERATOR -? and:

Block statement is bunch of statements(multiple lines of statement)


syntax for if

if(condition)
{
statement;
}

syntax of if else

if(condition)
{
statement;
}
else
{
statement;
}


NESTED IF STATEMENTS

syntax

if(condition)
{
	if(condition)
	{
		statement;
	}
}
else
{
	statement;
}

else
{
statement;
}



OR , AND , NOT

OR ----  ||
AND----  &&
NOT----  !


CONDTIONAL OPERATOR or THREE PARAMETER OPERATOR

? :
syntax

condition?statement(true):statement(false);


LOOPING STRUCTURE
1.WHILE LOOP
2.FOR LOOP

understanding looping statements
while loop structure
simple interest example
multiplication table example
different forms of while

why are computers introduced

computer was introduced because people fed up with repetitive task.


syntax of while

initialize;
while(condition)
	{
		statement;
		increment/decrement; or iteration;
	}
	

short hand notation (only for incrementing/ decrementing 1)
i = i + 1;  or i++;
i = i + 1;  or i--;
i = i * 1;  or i*=1;(works for all numbers)
i = i / 1;  or i/=1;(works for all numbers)

PRE -POST incre / decre -ment
1++;
++1;


maximum number int can store is 32767 (now 2147483647)


minimum number int can store is -32767  (now -2147483647)


THE "FOR" LOOP ----

INTRODUCTION
SIMPLE INTEREST PROBLEM
DIFFERENT CASES
 	1.No initialization
	2.No increment /decrement
Multiplication table problem

Syntax for "for" loop

for(initialization;codition;iteration)
{
statement;
}

nested looping

inside one forloop another forloop is their

MORE ABOUT LOOPING
1. break - prime number
2. continue -same i, j value
3. exit - prime number problem
4."do while loop"------executes atleast one
5. odd looping with the square of a number



break -to exit the loop

exit(0)


CASE CONTROL STRUCTURE

INTRODUCTION WITH EXAMPLES
CALCULATOR PROBLEM WITH IF ELSE
CALCULATOR WITH SEITCH


SYNTAX OF SWITCH

switch(expression)
{
case condition1:
	statements;
	break;
case condition2:
	statements;
	break;

case conditionN:
	statements;
	break;

default:
	statements;
	break;
}


switch and case are keyword
